/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  DeliveryAgent as PrismaDeliveryAgent,
  DeliveryService as PrismaDeliveryService,
} from "@prisma/client";

export class DeliveryAgentServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DeliveryAgentCountArgs, "select">
  ): Promise<number> {
    return this.prisma.deliveryAgent.count(args);
  }

  async deliveryAgents(
    args: Prisma.DeliveryAgentFindManyArgs
  ): Promise<PrismaDeliveryAgent[]> {
    return this.prisma.deliveryAgent.findMany(args);
  }
  async deliveryAgent(
    args: Prisma.DeliveryAgentFindUniqueArgs
  ): Promise<PrismaDeliveryAgent | null> {
    return this.prisma.deliveryAgent.findUnique(args);
  }
  async createDeliveryAgent(
    args: Prisma.DeliveryAgentCreateArgs
  ): Promise<PrismaDeliveryAgent> {
    return this.prisma.deliveryAgent.create(args);
  }
  async updateDeliveryAgent(
    args: Prisma.DeliveryAgentUpdateArgs
  ): Promise<PrismaDeliveryAgent> {
    return this.prisma.deliveryAgent.update(args);
  }
  async deleteDeliveryAgent(
    args: Prisma.DeliveryAgentDeleteArgs
  ): Promise<PrismaDeliveryAgent> {
    return this.prisma.deliveryAgent.delete(args);
  }

  async getDeliveryService(
    parentId: string
  ): Promise<PrismaDeliveryService | null> {
    return this.prisma.deliveryAgent
      .findUnique({
        where: { id: parentId },
      })
      .deliveryService();
  }
}
