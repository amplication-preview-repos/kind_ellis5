/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ClientWhereUniqueInput } from "../../client/base/ClientWhereUniqueInput";
import { ValidateNested, IsOptional, IsInt, Min, Max } from "class-validator";
import { Type } from "class-transformer";
import { LogisticsCreateNestedManyWithoutOrdersInput } from "./LogisticsCreateNestedManyWithoutOrdersInput";
import { PaymentCreateNestedManyWithoutOrdersInput } from "./PaymentCreateNestedManyWithoutOrdersInput";
import { ProductWhereUniqueInput } from "../../product/base/ProductWhereUniqueInput";

@InputType()
class OrderCreateInput {
  @ApiProperty({
    required: false,
    type: () => ClientWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ClientWhereUniqueInput)
  @IsOptional()
  @Field(() => ClientWhereUniqueInput, {
    nullable: true,
  })
  client?: ClientWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => LogisticsCreateNestedManyWithoutOrdersInput,
  })
  @ValidateNested()
  @Type(() => LogisticsCreateNestedManyWithoutOrdersInput)
  @IsOptional()
  @Field(() => LogisticsCreateNestedManyWithoutOrdersInput, {
    nullable: true,
  })
  logisticsItems?: LogisticsCreateNestedManyWithoutOrdersInput;

  @ApiProperty({
    required: false,
    type: () => PaymentCreateNestedManyWithoutOrdersInput,
  })
  @ValidateNested()
  @Type(() => PaymentCreateNestedManyWithoutOrdersInput)
  @IsOptional()
  @Field(() => PaymentCreateNestedManyWithoutOrdersInput, {
    nullable: true,
  })
  payments?: PaymentCreateNestedManyWithoutOrdersInput;

  @ApiProperty({
    required: false,
    type: () => ProductWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProductWhereUniqueInput)
  @IsOptional()
  @Field(() => ProductWhereUniqueInput, {
    nullable: true,
  })
  product?: ProductWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  quantity?: number | null;
}

export { OrderCreateInput as OrderCreateInput };
