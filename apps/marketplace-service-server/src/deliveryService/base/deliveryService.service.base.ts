/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  DeliveryService as PrismaDeliveryService,
  DeliveryAgent as PrismaDeliveryAgent,
} from "@prisma/client";

export class DeliveryServiceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DeliveryServiceCountArgs, "select">
  ): Promise<number> {
    return this.prisma.deliveryService.count(args);
  }

  async deliveryServices(
    args: Prisma.DeliveryServiceFindManyArgs
  ): Promise<PrismaDeliveryService[]> {
    return this.prisma.deliveryService.findMany(args);
  }
  async deliveryService(
    args: Prisma.DeliveryServiceFindUniqueArgs
  ): Promise<PrismaDeliveryService | null> {
    return this.prisma.deliveryService.findUnique(args);
  }
  async createDeliveryService(
    args: Prisma.DeliveryServiceCreateArgs
  ): Promise<PrismaDeliveryService> {
    return this.prisma.deliveryService.create(args);
  }
  async updateDeliveryService(
    args: Prisma.DeliveryServiceUpdateArgs
  ): Promise<PrismaDeliveryService> {
    return this.prisma.deliveryService.update(args);
  }
  async deleteDeliveryService(
    args: Prisma.DeliveryServiceDeleteArgs
  ): Promise<PrismaDeliveryService> {
    return this.prisma.deliveryService.delete(args);
  }

  async findDeliveryAgents(
    parentId: string,
    args: Prisma.DeliveryAgentFindManyArgs
  ): Promise<PrismaDeliveryAgent[]> {
    return this.prisma.deliveryService
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .deliveryAgents(args);
  }
}
